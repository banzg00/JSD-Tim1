import React, { useEffect, useState } from "react";
import { useNavigate, Link } from "react-router-dom";
import { Dialog, Button } from "@mui/material"; 
import {{entity.name}}Dialog from "../{{entity.name}}Dialog/{{entity.name}}Dialog";
import {{entity.name}}Service from "../../../services/{{entity.name}}Service";
import { {{entity.name}} } from "../../../types/types";

const {{entity.name}}List: React.FC = () => {
  const [{{entity.name | lower}}List, set{{entity.name}}List] = useState<{{entity.name}}[]>([]);
  const [isDialogOpen, setIsDialogOpen] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    {{entity.name}}Service.getAll{{entity.name}}().then((response) => {
      set{{entity.name}}List(response);
    });
  }, []);

  const handleAddNew = () => {
    setIsDialogOpen(true);
  };

  const handleDialogClose = () => {
    setIsDialogOpen(false);
  };

  return (
    <div className="flex w-full h-full justify-center bg-gray-200">
      <div className="relative mt-[10%] p-10 gap-y-8 h-fit w-[45vw] flex-col flex items-left rounded-xl bg-gray-300">
        <div className="absolute top-4 flex w-full items-center justify-between">
          <a className="underline" href="#" onClick={() => navigate('/')}>&lt; Back</a>
          <Button className="mr-16" variant="contained" onClick={handleAddNew}>Add new {{ entity.name }}</Button>
        </div>
        <div className="mx-auto font-semibold text-3xl mt-4">{{ entity.name }}</div>
        <table className="bg-gray-200 rounded-xl">
          <thead>
            <tr>
              {% for prop in entity.properties %}
                <th key="{{ prop.name }}" className="text-left pl-2">{{ prop.name | capitalize_str }}</th>
              {% endfor %}
            </tr>
          </thead>
          <tbody>
            {{ "{" }}{{ entity.name | lower }}List.map(({{ entity.name | lower }})=>(
            <tr key={{ "{" }}{{ entity.name | lower }}.id{{ "}" }} className="border-b border-b-gray-300">
            {% for prop in entity.properties %}
                <td key="{{ prop.name }}" className="text-left pl-2 pt-2">
                  {% if not prop.cardinality %}
                    {{'{ ' + entity.name | lower + '?.' + prop.name + .toString() + ' ?? \'N/A\' }' }}
                  {% else %}
                  {% if prop.cardinality == '@*..*' or prop.cardinality == '@1..*' %}
                    <div className="flex gap-x-2">
                      { {{entity.name | lower + '.' + prop.name}}?.map((listItem) => (
                      <Link className="underline text-blue-600 hover:text-blue-800 visited:text-purple-600"
                        to={ `/{{ prop.type | format_type | lower }}/${listItem?.id}` }
                        key={listItem?.id}
                      >
                        {listItem?.id}
                      </Link>
                      ))}
                    </div>
                  {% else %}                   
                    <Link className="underline text-blue-600 hover:text-blue-800 visited:text-purple-600"
                      to={ `/{{ prop.type | format_type | lower }}/${ {{ entity.name | lower }}?.{{ prop.name }}?.id}` }
                    >
                      { {{ entity.name | lower + '?.' + prop.name + '?.id' }} }
                    </Link>
                  {% endif %}
                  {% endif %}
                </td>
            {% endfor %}
            </tr>
            ))}
          </tbody>
        </table>
      </div>

      <Dialog open={isDialogOpen} onClose={handleDialogClose} maxWidth="sm" fullWidth>
        <{{ entity.name }}Dialog data={{ "{{" }}id: undefined{{ "}}" }} onClose={handleDialogClose} />
      </Dialog>
    </div> 
  );
};

export default {{entity.name}}List;
